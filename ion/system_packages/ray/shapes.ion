// Basic shapes drawing functions
@foreign func DrawPixel(posX: int, posY: int, color: Color);
@foreign func DrawPixelV(position: Vector2, color: Color);
@foreign func DrawLine(startPosX: int, startPosY: int, endPosX: int, endPosY: int, color: Color);
@foreign func DrawLineV(startPos: Vector2, endPos: Vector2, color: Color);
@foreign func DrawLineEx(startPos: Vector2, endPos: Vector2, thick: float, color: Color);
@foreign func DrawLineBezier(startPos: Vector2, endPos: Vector2, thick: float, color: Color);
@foreign func DrawLineStrip(points: Vector2*, pointsCount: int, color: Color);
@foreign func DrawCircle(centerX: int, centerY: int, radius: float, color: Color);
@foreign func DrawCircleSector(center: Vector2, radius: float, startAngle: int, endAngle: int, segments: int, color: Color);
@foreign func DrawCircleSectorLines(center: Vector2, radius: float, startAngle: int, endAngle: int, segments: int, color: Color);
@foreign func DrawCircleGradient(centerX: int, centerY: int, radius: float, color1: Color, color2: Color);
@foreign func DrawCircleV(center: Vector2, radius: float, color: Color);
@foreign func DrawCircleLines(centerX: int, centerY: int, radius: float, color: Color);
@foreign func DrawEllipse(centerX: int, centerY: int, radiusH: float, radiusV: float, color: Color);
@foreign func DrawEllipseLines(centerX: int, centerY: int, radiusH: float, radiusV: float, color: Color);
@foreign func DrawRing(center: Vector2, innerRadius: float, outerRadius: float, startAngle: int, endAngle: int, segments: int, color: Color);
@foreign func DrawRingLines(center: Vector2, innerRadius: float, outerRadius: float, startAngle: int, endAngle: int, segments: int, color: Color);
@foreign func DrawRectangle(posX: int, posY: int, width: int, height: int, color: Color);
@foreign func DrawRectangleV(position: Vector2, size: Vector2, color: Color);
@foreign func DrawRectangleRec(rec: Rectangle, color: Color);
@foreign func DrawRectanglePro(rec: Rectangle, origin: Vector2, rotation: float, color: Color);
@foreign func DrawRectangleGradientV(posX: int, posY: int, width: int, height: int, color1: Color, color2: Color);
@foreign func DrawRectangleGradientH(posX: int, posY: int, width: int, height: int, color1: Color, color2: Color);
@foreign func DrawRectangleGradientEx(rec: Rectangle, col1: Color, col2: Color, col3: Color, col4: Color);
@foreign func DrawRectangleLines(posX: int, posY: int, width: int, height: int, color: Color);
@foreign func DrawRectangleLinesEx(rec: Rectangle, lineThick: int, color: Color);
@foreign func DrawRectangleRounded(rec: Rectangle, roundness: float, segments: int, color: Color);
@foreign func DrawRectangleRoundedLines(rec: Rectangle, roundness: float, segments: int, lineThick: int, color: Color);
@foreign func DrawTriangle(v1: Vector2, v2: Vector2, v3: Vector2, color: Color);
@foreign func DrawTriangleLines(v1: Vector2, v2: Vector2, v3: Vector2, color: Color);
@foreign func DrawTriangleFan(points: Vector2*, pointsCount: int, color: Color);
@foreign func DrawTriangleStrip(points: Vector2*, pointsCount: int, color: Color);
@foreign func DrawPoly(center: Vector2, sides: int, radius: float, rotation: float, color: Color);
@foreign func DrawPolyLines(center: Vector2, sides: int, radius: float, rotation: float, color: Color);

// Basic shapes collision detection functions
@foreign func CheckCollisionRecs(rec1: Rectangle, rec2: Rectangle): bool;
@foreign func CheckCollisionCircles(center1: Vector2, radius1: float, center2: Vector2, radius2: float): bool;
@foreign func CheckCollisionCircleRec(center: Vector2, radius: float, rec: Rectangle): bool;
@foreign func CheckCollisionPointRec(point: Vector2, rec: Rectangle): bool;
@foreign func CheckCollisionPointCircle(point: Vector2, center: Vector2, radius: float): bool;
@foreign func CheckCollisionPointTriangle(point: Vector2, p1: Vector2, p2: Vector2, p3: Vector2): bool;
@foreign func CheckCollisionLines(startPos1: Vector2, endPos1: Vector2, startPos2: Vector2, endPos2: Vector2, collisionPoint: Vector2*): bool;
@foreign func GetCollisionRec(rec1: Rectangle, rec2: Rectangle): Rectangle;
